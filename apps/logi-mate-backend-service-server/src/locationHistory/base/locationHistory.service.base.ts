/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  LocationHistory as PrismaLocationHistory,
} from "@prisma/client";

export class LocationHistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.LocationHistoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.locationHistory.count(args);
  }

  async locationHistories(
    args: Prisma.LocationHistoryFindManyArgs
  ): Promise<PrismaLocationHistory[]> {
    return this.prisma.locationHistory.findMany(args);
  }
  async locationHistory(
    args: Prisma.LocationHistoryFindUniqueArgs
  ): Promise<PrismaLocationHistory | null> {
    return this.prisma.locationHistory.findUnique(args);
  }
  async createLocationHistory(
    args: Prisma.LocationHistoryCreateArgs
  ): Promise<PrismaLocationHistory> {
    return this.prisma.locationHistory.create(args);
  }
  async updateLocationHistory(
    args: Prisma.LocationHistoryUpdateArgs
  ): Promise<PrismaLocationHistory> {
    return this.prisma.locationHistory.update(args);
  }
  async deleteLocationHistory(
    args: Prisma.LocationHistoryDeleteArgs
  ): Promise<PrismaLocationHistory> {
    return this.prisma.locationHistory.delete(args);
  }
}
